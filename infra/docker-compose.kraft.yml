services:
  broker-1:
    image: apache/kafka:3.7.0
    container_name: broker-1
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@broker-1:9093,2@broker-2:9093,3@broker-3:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker-1:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_NUM_PARTITIONS=12
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LOG_DIRS=/kafka/kafka-logs-1
    ports:
      - "9092:9092"
    volumes:
      - broker1-data:/kafka/kafka-logs-1

  broker-2:
    image: apache/kafka:3.7.0
    container_name: broker-2
    environment:
      - KAFKA_NODE_ID=2
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@broker-1:9093,2@broker-2:9093,3@broker-3:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker-2:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_NUM_PARTITIONS=12
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LOG_DIRS=/kafka/kafka-logs-2
    volumes:
      - broker2-data:/kafka/kafka-logs-2

  broker-3:
    image: apache/kafka:3.7.0
    container_name: broker-3
    environment:
      - KAFKA_NODE_ID=3
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@broker-1:9093,2@broker-2:9093,3@broker-3:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://broker-3:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_NUM_PARTITIONS=12
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=2
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_LOG_DIRS=/kafka/kafka-logs-3
    volumes:
      - broker3-data:/kafka/kafka-logs-3

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker-1:9092,broker-2:9092,broker-3:9092"
    ports:
      - "8081:8081"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - schema-registry
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kraft
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker-1:9092,broker-2:9092,broker-3:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  app:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - redis
    environment:
      APP_CONFIG: "config/config.docker.kraft.yaml"
    volumes:
      - ..:/app
    ports:
      - "8000:8000"
    command: bash -lc "uvicorn app:app --host 0.0.0.0 --port 8000 --reload"

  stream-consumer:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - redis
    environment:
      APP_CONFIG: "config/config.docker.kraft.yaml"
    volumes:
      - ..:/app
    command: python scripts/consumer_entry.py
    restart: unless-stopped

  # Demo click generator service
  demo-producer:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - redis
    environment:
      APP_CONFIG: "config/config.docker.kraft.yaml"
    volumes:
      - ..:/app
    command: bash -c "sleep 30 && python scripts/click_generator.py --mode stream --duration 3600 --users 1 2 3 4 5"
    restart: unless-stopped
    profiles: ["demo"]  # Only start with --profile demo

  stream-producer:
    build:
      context: ..
      dockerfile: infra/Dockerfile
    depends_on:
      - broker-1
      - broker-2
      - broker-3
    environment:
      APP_CONFIG: "config/config.docker.kraft.yaml"
    volumes:
      - ..:/app
    command: python scripts/producer_entry.py
    restart: unless-stopped

volumes:
  broker1-data: {}
  broker2-data: {}
  broker3-data: {}